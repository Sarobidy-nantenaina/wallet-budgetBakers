openapi: 3.0.3
info:
  version: "1.0.0"
  title: "Wallet API"
servers:
  - url: "http://wallet.com"
paths:
  /accounts:
    get:
      summary: "List all accounts"
      responses:
        200:
          description: "The list of all accounts"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: "Create a new account"
      responses:
        200:
          description: "Account created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'

  /accounts/{accountId}:
    get:
      summary: "Get account details by ID"
      parameters:
        - name: "accountId"
          in: "path"
          required: true
          type: "integer"
      responses:
        200:
          description: "Account details retrieved successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: "Update account details by ID"
      parameters:
        - name: "accountId"
          in: "path"
          required: true
          type: "integer"
        - name: "account"
          in: "body"
          required: true
          schema:
            $ref: "#/components/schemas/Account"
      responses:
        200:
          description: "Account updated successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: "Delete an account by ID"
      parameters:
        - name: "accountId"
          in: "path"
          required: true
          type: "integer"
      responses:
        200:
          description: "Account deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Account deleted successfully"
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'

  /transactions:
    get:
      summary: "List all transactions"
      responses:
        200:
          description: "The list of all transactions"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: "Create a new transaction"
      responses:
        200:
          description: "Transaction created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'


  /transactions/{transactionId}:
    put:
      summary: "Update transaction details by ID"
      parameters:
        - name: "transactionId"
          in: "path"
          required: true
          type: "integer"
        - name: "transaction"
          in: "body"
          required: true
          schema:
            $ref: "#/components/schemas/Transaction"
      responses:
        200:
          description: "Transaction updated successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: "Delete a transaction by ID"
      parameters:
        - name: "transactionId"
          in: "path"
          required: true
          type: "integer"
      responses:
        200:
          description: "Transaction deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Transaction deleted successfully"
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'

  /currencies:
    get:
      summary: "List all currencies"
      responses:
        200:
          description: "The list of all currencies"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: "Create a new currency"
      responses:
        200:
          description: "Currency created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currency"
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: "Update currency details by ID"
      parameters:
        - name: "currencyId"
          in: "path"
          required: true
          type: "integer"
        - name: "currency"
          in: "body"
          required: true
          schema:
            $ref: "#/components/schemas/Currency"
      responses:
        200:
          description: "Currency updated successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Currency'
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: "Delete a currency by ID"
      parameters:
        - name: "currencyId"
          in: "path"
          required: true
          type: "integer"
      responses:
        200:
          description: "Currency deleted successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: "Currency deleted successfully"
        400:
          $ref: '#/components/responses/400'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'

components:
  responses:
    400:
      description: "Bad Request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    403:
      description: "Forbidden"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    500:
      description: "Internal Server Error"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        balance:
          type: number
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        currency:
          $ref: "#/components/schemas/Currency"
        type:
          type: string
    Currency:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string
    Transaction:
      type: object
      properties:
        id:
          type: integer
        label:
          type: string
        amount:
          type: number
        dateHeure:
          type: string
          format: date-time
        typeTransaction:
          type: string
          enum:
            - debit
            - credit
        account:
          $ref: "#/components/schemas/Account"
    Error:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
      example:
        type: "BadRequestException"
        message: "Bad request"
